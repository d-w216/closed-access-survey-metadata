---
title: "response-day-time"
author: "Daniel Wagner"
format: 
  html:
    embed-resources: true
    code-fold: true
    code-link: true
editor: visual
---

# SONA-Survey-response-times

## setup

```{r,message=FALSE}
#load packages
library(tidyverse)
library(ggplot2)
library(ggtext)
library(lubridate)
library(dplyr)
library(patchwork) 
library(ggnewscale) 

```

```{r}

bio <- read.csv("../data/raw/bio-response-time.csv", sep = ";")

blue <- read.csv("../data/raw/blue-response-time.csv", sep = ";")

btf23 <- read.csv("../data/raw/btf23-response-time.csv", sep = ";")

```

## A look at all surveys - merged (3)

```{r}

# Beispiel-Daten
df1 <- bio
df2 <- blue
df3 <- btf23

df <- bind_rows(df1, df2, df3)
df$DateTime <- dmy_hm(paste(df$Date2, df$Time))
df$Hour <- hour(df$DateTime)
df$DayOfWeek <- wday(df$DateTime, label = TRUE, abbr = FALSE)

# Funktion für einzelnen Heatmap-Plot mit eigener Farbe
plot_heatmap <- function(data, title, fill_color){
  ggplot(data, aes(x = Hour, y = DayOfWeek, fill = Count)) +
    geom_tile(color = "white") +
    scale_fill_gradient(low = "white", high = fill_color) +
    labs(title = title, x = "Hour of Day", y = "Day of Week", fill = "Count") +
    theme_gray()
}

# Heatmap-Daten pro Source
heat1 <- df %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")

# Erstelle einzelne Heatmaps
p <- plot_heatmap(heat1, "Responses in 3 surveys", "darkgreen")

#save and plot 
ggsave("../figures/day-time-response-all-surveys.png", plot = p, width = 6, height = 4, units = "in", dpi = 300)

p

```

## A look at the surveys

```{r}

# Beispiel-Daten
df1 <- bio
df2 <- blue
df3 <- btf23

df1$Source <- "BioBall"
df2$Source <- "BlueBio"
df3$Source <- "BTF23"

df <- bind_rows(df1, df2, df3)
df$DateTime <- dmy_hm(paste(df$Date2, df$Time))
df$Hour <- hour(df$DateTime)
df$DayOfWeek <- wday(df$DateTime, label = TRUE, abbr = FALSE)

# Funktion für einzelnen Heatmap-Plot mit eigener Farbe
plot_heatmap <- function(data, title, fill_color){
  ggplot(data, aes(x = Hour, y = DayOfWeek, fill = Count)) +
    geom_tile(color = "white") +
    scale_fill_gradient(low = "white", high = fill_color) +
    labs(title = title, x = "Hour of Day", y = "Day of Week", fill = "Count") +
    theme_grey()
}

# Heatmap-Daten pro Source
heat1 <- df %>% filter(Source == "BioBall") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")
heat2 <- df %>% filter(Source == "BlueBio") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")
heat3 <- df %>% filter(Source == "BTF23") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")

# Erstelle einzelne Heatmaps
p1 <- plot_heatmap(heat1, "Responses in BioBall", "brown")
p2 <- plot_heatmap(heat2, "Responses in BlueBio", "blue")
p3 <- plot_heatmap(heat3, "Responses in BTF23", "green")


```

### BioBall

```{r}
ggsave("../figures/day-time-response-BioBall-survey.png", plot = p1, width = 6, height = 4, units = "in", dpi = 300)
p1
```

### Blue Bioeconomy

```{r}
ggsave("../figures/day-time-response-BlueBio-survey.png", plot = p2, width = 6, height = 4, units = "in", dpi = 300)
p2
```

### BIOTEXFUTURE

```{r}
ggsave("../figures/day-time-response-BTF23-survey.png", plot = p3, width = 6, height = 4, units = "in", dpi = 300)
p3
```

## A look at all surveys - overlay (3)

```{r}

# Beispiel-Daten
df1 <- bio
df2 <- blue
df3 <- btf23

df1$Source <- "BioBall"
df2$Source <- "BlueBio"
df3$Source <- "BTF23"

df <- bind_rows(df1, df2, df3)
df$DateTime <- dmy_hm(paste(df$Date2, df$Time))
df$Hour <- hour(df$DateTime)
df$DayOfWeek <- wday(df$DateTime, label = TRUE, abbr = FALSE)

# Heatmap-Daten pro Source
heat1 <- df %>% filter(Source == "BioBall") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")
heat2 <- df %>% filter(Source == "BlueBio") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")
heat3 <- df %>% filter(Source == "BTF23") %>%
  group_by(DayOfWeek, Hour) %>% summarise(Count = n(), .groups = "drop")

# Überlagerte Heatmaps mit Transparenz
a <- ggplot() +
  # BioBall
  geom_tile(data = heat1, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "brown") +
  labs(fill = "BioBall Count") +
  
  ggnewscale::new_scale_fill() +
  
  # BlueBio
  geom_tile(data = heat2, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "darkblue") +
  labs(fill = "BlueBio Count") +
  
  ggnewscale::new_scale_fill() +
  
  # BTF23
  geom_tile(data = heat3, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "darkgreen") +
  labs(fill = "BTF23 Count") +
  
  labs(title = "Responses in 3 surveys (overlay)", x = "Hour of Day", y = "Day of Week") +
  theme_grey()

ggsave("../figures/day-time-response-survey-overlay.png", plot = a, width = 8, height = 6, units = "in", dpi = 300)

ggplot() +
  # BioBall
  geom_tile(data = heat1, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "brown") +
  labs(fill = "BioBall Count") +
  
  ggnewscale::new_scale_fill() +
  
  # BlueBio
  geom_tile(data = heat2, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "darkblue") +
  labs(fill = "BlueBio Count") +
  
  ggnewscale::new_scale_fill() +
  
  # BTF23
  geom_tile(data = heat3, aes(x = Hour, y = DayOfWeek, fill = Count), color = "white", alpha = 0.8) +
  scale_fill_gradient(low = "white", high = "darkgreen") +
  labs(fill = "BTF23 Count") +
  
  labs(title = "Responses in 3 surveys (overlay)", x = "Hour of Day", y = "Day of Week") +
  theme_grey()


```
